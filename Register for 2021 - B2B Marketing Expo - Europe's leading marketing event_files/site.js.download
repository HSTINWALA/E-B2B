/*
* @Title: Javascript - Site
* @Author: JGuerreiro
* @Date:   2015-02-27 11:32:22
* @Last Modified by:   ASP Design
* @Last Modified time: 2019-07-29 10:55:10
*
*/


/*********************************************************************
*  #### Twitter Post Fetcher v17.0.0 ####
*  Coded by Jason Mayes 2015. A present to all the developers out there.
*  www.jasonmayes.com
*  Please keep this disclaimer with my code if you use it. Thanks. :-)
*  Got feedback or questions, ask here:
*  http://www.jasonmayes.com/projects/twitterApi/
*  Github: https://github.com/jasonmayes/Twitter-Post-Fetcher
*  Updates will be posted to this site.
*********************************************************************/
(function(root,factory){if(typeof define==='function'&&define.amd){define([],factory);}else if(typeof exports==='object'){module.exports=factory();}else{factory();}}(this,function(){var domNode='';var maxTweets=20;var parseLinks=true;var queue=[];var inProgress=false;var printTime=true;var printUser=true;var formatterFunction=null;var supportsClassName=true;var showRts=true;var customCallbackFunction=null;var showInteractionLinks=true;var showImages=false;var targetBlank=true;var lang='en';var permalinks=true;var dataOnly=false;var script=null;var scriptAdded=false;function handleTweets(tweets){if(customCallbackFunction===null){var x=tweets.length;var n=0;var element=document.getElementById(domNode);var html='<ul>';while(n<x){html+='<li>'+tweets[n]+'</li>';n++;}
html+='</ul>';element.innerHTML=html;}else{customCallbackFunction(tweets);}}
function strip(data){return data.replace(/<b[^>]*>(.*?)<\/b>/gi,function(a,s){return s;}).replace(/class="(?!(tco-hidden|tco-display|tco-ellipsis))+.*?"|data-query-source=".*?"|dir=".*?"|rel=".*?"/gi,'');}
function targetLinksToNewWindow(el){var links=el.getElementsByTagName('a');for(var i=links.length-1;i>=0;i--){links[i].setAttribute('target','_blank');}}
function getElementsByClassName(node,classname){var a=[];var regex=new RegExp('(^| )'+classname+'( |$)');var elems=node.getElementsByTagName('*');for(var i=0,j=elems.length;i<j;i++){if(regex.test(elems[i].className)){a.push(elems[i]);}}
return a;}
function extractImageUrl(image_data){if(image_data!==undefined&&image_data.innerHTML.indexOf('data-srcset')>=0){var data_src=image_data.innerHTML.match(/data-srcset="([A-z0-9%_\.-]+)/i)[0];return decodeURIComponent(data_src).split('"')[1];}}
var twitterFetcher={fetch:function(config){if(config.maxTweets===undefined){config.maxTweets=20;}
if(config.enableLinks===undefined){config.enableLinks=true;}
if(config.showUser===undefined){config.showUser=true;}
if(config.showTime===undefined){config.showTime=true;}
if(config.dateFunction===undefined){config.dateFunction='default';}
if(config.showRetweet===undefined){config.showRetweet=true;}
if(config.customCallback===undefined){config.customCallback=null;}
if(config.showInteraction===undefined){config.showInteraction=true;}
if(config.showImages===undefined){config.showImages=false;}
if(config.linksInNewWindow===undefined){config.linksInNewWindow=true;}
if(config.showPermalinks===undefined){config.showPermalinks=true;}
if(config.dataOnly===undefined){config.dataOnly=false;}
if(inProgress){queue.push(config);}else{inProgress=true;domNode=config.domId;maxTweets=config.maxTweets;parseLinks=config.enableLinks;printUser=config.showUser;printTime=config.showTime;showRts=config.showRetweet;formatterFunction=config.dateFunction;customCallbackFunction=config.customCallback;showInteractionLinks=config.showInteraction;showImages=config.showImages;targetBlank=config.linksInNewWindow;permalinks=config.showPermalinks;dataOnly=config.dataOnly;var head=document.getElementsByTagName('head')[0];if(script!==null){head.removeChild(script);}
script=document.createElement('script');script.type='text/javascript';if(config.list!==undefined){script.src='https://syndication.twitter.com/timeline/list?'+'callback=__twttrf.callback&dnt=false&list_slug='+
config.list.listSlug+'&screen_name='+config.list.screenName+'&suppress_response_codes=true&lang='+(config.lang||lang)+'&rnd='+Math.random();}else if(config.profile!==undefined){script.src='https://syndication.twitter.com/timeline/profile?'+'callback=__twttrf.callback&dnt=false'+'&screen_name='+config.profile.screenName+'&suppress_response_codes=true&lang='+(config.lang||lang)+'&rnd='+Math.random();}else if(config.likes!==undefined){script.src='https://syndication.twitter.com/timeline/likes?'+'callback=__twttrf.callback&dnt=false'+'&screen_name='+config.likes.screenName+'&suppress_response_codes=true&lang='+(config.lang||lang)+'&rnd='+Math.random();}else{script.src='https://cdn.syndication.twimg.com/widgets/timelines/'+
config.id+'?&lang='+(config.lang||lang)+'&callback=__twttrf.callback&'+'suppress_response_codes=true&rnd='+Math.random();}
head.appendChild(script);}},callback:function(data){if(data===undefined||data.body===undefined){inProgress=false;if(queue.length>0){twitterFetcher.fetch(queue[0]);queue.splice(0,1);}
return;}
data.body=data.body.replace(/(<img[^c]*class="Emoji[^>]*>)|(<img[^c]*class="u-block[^>]*>)/g,'');if(!showImages){data.body=data.body.replace(/(<img[^c]*class="NaturalImage-image[^>]*>|(<img[^c]*class="CroppedImage-image[^>]*>))/g,'');}
if(!printUser){data.body=data.body.replace(/(<img[^c]*class="Avatar"[^>]*>)/g,'');}
var div=document.createElement('div');div.innerHTML=data.body;if(typeof(div.getElementsByClassName)==='undefined'){supportsClassName=false;}
function swapDataSrc(element){var avatarImg=element.getElementsByTagName('img')[0];avatarImg.src=avatarImg.getAttribute('data-src-2x');return element;}
var tweets=[];var authors=[];var times=[];var images=[];var rts=[];var tids=[];var permalinksURL=[];var x=0;if(supportsClassName){var tmp=div.getElementsByClassName('timeline-Tweet');while(x<tmp.length){if(tmp[x].getElementsByClassName('timeline-Tweet-retweetCredit').length>0){rts.push(true);}else{rts.push(false);}
if(!rts[x]||rts[x]&&showRts){tweets.push(tmp[x].getElementsByClassName('timeline-Tweet-text')[0]);tids.push(tmp[x].getAttribute('data-tweet-id'));if(printUser){authors.push(swapDataSrc(tmp[x].getElementsByClassName('timeline-Tweet-author')[0]));}
times.push(tmp[x].getElementsByClassName('dt-updated')[0]);permalinksURL.push(tmp[x].getElementsByClassName('timeline-Tweet-timestamp')[0]);if(tmp[x].getElementsByClassName('timeline-Tweet-media')[0]!==undefined){images.push(tmp[x].getElementsByClassName('timeline-Tweet-media')[0]);}else{images.push(undefined);}}
x++;}}else{var tmp=getElementsByClassName(div,'timeline-Tweet');while(x<tmp.length){if(getElementsByClassName(tmp[x],'timeline-Tweet-retweetCredit').length>0){rts.push(true);}else{rts.push(false);}
if(!rts[x]||rts[x]&&showRts){tweets.push(getElementsByClassName(tmp[x],'timeline-Tweet-text')[0]);tids.push(tmp[x].getAttribute('data-tweet-id'));if(printUser){authors.push(swapDataSrc(getElementsByClassName(tmp[x],'timeline-Tweet-author')[0]));}
times.push(getElementsByClassName(tmp[x],'dt-updated')[0]);permalinksURL.push(getElementsByClassName(tmp[x],'timeline-Tweet-timestamp')[0]);if(getElementsByClassName(tmp[x],'timeline-Tweet-media')[0]!==undefined){images.push(getElementsByClassName(tmp[x],'timeline-Tweet-media')[0]);}else{images.push(undefined);}}
x++;}}
if(tweets.length>maxTweets){tweets.splice(maxTweets,(tweets.length-maxTweets));authors.splice(maxTweets,(authors.length-maxTweets));times.splice(maxTweets,(times.length-maxTweets));rts.splice(maxTweets,(rts.length-maxTweets));images.splice(maxTweets,(images.length-maxTweets));permalinksURL.splice(maxTweets,(permalinksURL.length-maxTweets));}
var arrayTweets=[];var x=tweets.length;var n=0;if(dataOnly){while(n<x){arrayTweets.push({tweet:tweets[n].innerHTML,author:authors[n]?authors[n].innerHTML:'Unknown Author',time:times[n].textContent,timestamp:times[n].getAttribute('datetime').replace('+0000','Z').replace(/([\+\-])(\d\d)(\d\d)/,'$1$2:$3'),image:extractImageUrl(images[n]),rt:rts[n],tid:tids[n],permalinkURL:(permalinksURL[n]===undefined)?'':permalinksURL[n].href});n++;}}else{while(n<x){if(typeof(formatterFunction)!=='string'){var datetimeText=times[n].getAttribute('datetime');var newDate=new Date(times[n].getAttribute('datetime').replace(/-/g,'/').replace('T',' ').split('+')[0]);var dateString=formatterFunction(newDate,datetimeText);times[n].setAttribute('aria-label',dateString);if(tweets[n].textContent){if(supportsClassName){times[n].textContent=dateString;}else{var h=document.createElement('p');var t=document.createTextNode(dateString);h.appendChild(t);h.setAttribute('aria-label',dateString);times[n]=h;}}else{times[n].textContent=dateString;}}
var op='';if(parseLinks){if(targetBlank){targetLinksToNewWindow(tweets[n]);if(printUser){targetLinksToNewWindow(authors[n]);}}
if(printUser){op+='<div class="user">'+strip(authors[n].innerHTML)+'</div>';}
op+='<p class="tweet">'+strip(tweets[n].innerHTML)+'</p>';if(printTime){if(permalinks){op+='<p class="timePosted"><a href="'+permalinksURL[n]+'">'+times[n].getAttribute('aria-label')+'</a></p>';}else{op+='<p class="timePosted">'+
times[n].getAttribute('aria-label')+'</p>';}}}else{if(tweets[n].textContent){if(printUser){op+='<p class="user">'+authors[n].textContent+'</p>';}
op+='<p class="tweet">'+tweets[n].textContent+'</p>';if(printTime){op+='<p class="timePosted">'+times[n].textContent+'</p>';}}else{if(printUser){op+='<p class="user">'+authors[n].textContent+'</p>';}
op+='<p class="tweet">'+tweets[n].textContent+'</p>';if(printTime){op+='<p class="timePosted">'+times[n].textContent+'</p>';}}}
if(showInteractionLinks){op+='<p class="interact"><a href="https://twitter.com/intent/'+'tweet?in_reply_to='+tids[n]+'" class="twitter_reply_icon"'+
(targetBlank?' target="_blank">':'>')+'Reply</a><a href="https://twitter.com/intent/retweet?'+'tweet_id='+tids[n]+'" class="twitter_retweet_icon"'+
(targetBlank?' target="_blank">':'>')+'Retweet</a>'+'<a href="https://twitter.com/intent/favorite?tweet_id='+
tids[n]+'" class="twitter_fav_icon"'+
(targetBlank?' target="_blank">':'>')+'Favourite</a></p>';}
if(showImages&&images[n]!==undefined&&extractImageUrl(images[n])!==undefined){op+='<div class="media" style="background-image:url('+extractImageUrl(images[n])+');">'+'<img src="'+extractImageUrl(images[n])+'" alt="Image from tweet" />'+'</div>';}
if(showImages){arrayTweets.push(op);}else if(!showImages&&tweets[n].textContent.length){arrayTweets.push(op);}
n++;}}
handleTweets(arrayTweets);inProgress=false;if(queue.length>0){twitterFetcher.fetch(queue[0]);queue.splice(0,1);}}};window.__twttrf=twitterFetcher;window.twitterFetcher=twitterFetcher;return twitterFetcher;}));



//== ON SCREEN
// https://github.com/silvestreh/onScreen
!function(global,factory){"object"==typeof exports&&"undefined"!=typeof module?module.exports=factory():"function"==typeof define&&define.amd?define(factory):global.OnScreen=factory()}(this,function(){"use strict";function attach(){var container=this.options.container;if(container instanceof HTMLElement){var style=window.getComputedStyle(container);"static"===style.position&&(container.style.position="relative")}container.addEventListener("scroll",this._scroll),window.addEventListener("resize",this._scroll),this._scroll(),this.attached=!0}function inViewport(el){var options=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{tolerance:0};if(!el)throw new Error("You should specify the element you want to test");"string"==typeof el&&(el=document.querySelector(el));var elRect=el.getBoundingClientRect();return elRect.bottom-options.tolerance>0&&elRect.right-options.tolerance>0&&elRect.left+options.tolerance<(window.innerWidth||document.documentElement.clientWidth)&&elRect.top+options.tolerance<(window.innerHeight||document.documentElement.clientHeight)}function inContainer(el){var options=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{tolerance:0,container:""};if(!el)throw new Error("You should specify the element you want to test");if("string"==typeof el&&(el=document.querySelector(el)),"string"==typeof options&&(options={tolerance:0,container:document.querySelector(options)}),"string"==typeof options.container&&(options.container=document.querySelector(options.container)),options instanceof HTMLElement&&(options={tolerance:0,container:options}),!options.container)throw new Error("You should specify a container element");var containerRect=options.container.getBoundingClientRect();return el.offsetTop+el.clientHeight-options.tolerance>options.container.scrollTop&&el.offsetLeft+el.clientWidth-options.tolerance>options.container.scrollLeft&&el.offsetLeft+options.tolerance<containerRect.width+options.container.scrollLeft&&el.offsetTop+options.tolerance<containerRect.height+options.container.scrollTop}function eventHandler(){var trackedElements=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},options=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{tolerance:0},selectors=Object.keys(trackedElements),testVisibility=void 0;selectors.length&&(testVisibility=options.container===window?inViewport:inContainer,selectors.forEach(function(selector){trackedElements[selector].nodes.forEach(function(item){if(testVisibility(item.node,options)?(item.wasVisible=item.isVisible,item.isVisible=!0):(item.wasVisible=item.isVisible,item.isVisible=!1),item.isVisible===!0&&item.wasVisible===!1){if(!trackedElements[selector].enter)return;Object.keys(trackedElements[selector].enter).forEach(function(callback){"function"==typeof trackedElements[selector].enter[callback]&&trackedElements[selector].enter[callback](item.node,"enter")})}if(item.isVisible===!1&&item.wasVisible===!0){if(!trackedElements[selector].leave)return;Object.keys(trackedElements[selector].leave).forEach(function(callback){"function"==typeof trackedElements[selector].leave[callback]&&trackedElements[selector].leave[callback](item.node,"leave")})}})}))}function debouncedScroll(){var _this=this,timeout=void 0;return function(){clearTimeout(timeout),timeout=setTimeout(function(){eventHandler(_this.trackedElements,_this.options)},_this.options.throttle)}}function destroy(){this.options.container.removeEventListener("scroll",this._scroll),window.removeEventListener("resize",this._scroll),this.attached=!1}function off(event,selector,handler){var enterCallbacks=Object.keys(this.trackedElements[selector].enter),leaveCallbacks=Object.keys(this.trackedElements[selector].leave);if({}.hasOwnProperty.call(this.trackedElements,selector))if(handler){if(this.trackedElements[selector][event]){var callbackName="function"==typeof handler?handler.name:handler;delete this.trackedElements[selector][event][callbackName]}}else delete this.trackedElements[selector][event];enterCallbacks.length||leaveCallbacks.length||delete this.trackedElements[selector]}function on(event,selector,callback){var allowed=["enter","leave"];if(!event)throw new Error("No event given. Choose either enter or leave");if(!selector)throw new Error("No selector to track");if(allowed.indexOf(event)<0)throw new Error(event+" event is not supported");({}).hasOwnProperty.call(this.trackedElements,selector)||(this.trackedElements[selector]={}),this.trackedElements[selector].nodes=[];for(var i=0;i<document.querySelectorAll(selector).length;i++){var item={isVisible:!1,wasVisible:!1,node:document.querySelectorAll(selector)[i]};this.trackedElements[selector].nodes.push(item)}"function"==typeof callback&&(this.trackedElements[selector][event]||(this.trackedElements[selector][event]={}),this.trackedElements[selector][event][callback.name||"anonymous"]=callback)}function observeDOM(obj,callback){var MutationObserver=window.MutationObserver||window.WebKitMutationObserver;if(MutationObserver){var obs=new MutationObserver(callback);obs.observe(obj,{childList:!0,subtree:!0})}else obj.addEventListener("DOMNodeInserted",callback,!1),obj.addEventListener("DOMNodeRemoved",callback,!1)}function OnScreen(){var _this=this,options=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{tolerance:0,debounce:100,container:window};this.options={},this.trackedElements={},Object.defineProperties(this.options,{container:{configurable:!1,enumerable:!1,get:function(){var container=void 0;return"string"==typeof options.container?container=document.querySelector(options.container):options.container instanceof HTMLElement&&(container=options.container),container||window},set:function(value){options.container=value}},debounce:{get:function(){return parseInt(options.debounce,10)||100},set:function(value){options.debounce=value}},tolerance:{get:function(){return parseInt(options.tolerance,10)||0},set:function(value){options.tolerance=value}}}),Object.defineProperty(this,"_scroll",{enumerable:!1,configurable:!1,writable:!1,value:this._debouncedScroll.call(this)}),observeDOM(document.querySelector("body"),function(){Object.keys(_this.trackedElements).forEach(function(element){_this.on("enter",element),_this.on("leave",element)})}),this.attach()}return Object.defineProperties(OnScreen.prototype,{_debouncedScroll:{configurable:!1,writable:!1,enumerable:!1,value:debouncedScroll},attach:{configurable:!1,writable:!1,enumerable:!1,value:attach},destroy:{configurable:!1,writable:!1,enumerable:!1,value:destroy},off:{configurable:!1,writable:!1,enumerable:!1,value:off},on:{configurable:!1,writable:!1,enumerable:!1,value:on}}),OnScreen.check=inViewport,OnScreen});
//# sourceMappingURL=dist/on-screen.umd.min.map

$(document).ready(function(){
	//== GLOBAL VARIABLE
	window.headerSticky = $( '.header-sticky' ); //@note: Global variable accessed from anchor.js to calculate the header height

	//== STICKY HEADER
	if ( $( '.header-sticky' ).length	) {
		var headerOffsetTop = $( '.header' ).offset().top + $( '.header' ).outerHeight();

		$(window).scroll(function(){
			var scrollTop = $(window).scrollTop();


			if ( scrollTop > headerOffsetTop ){
				$( '.header-sticky' ).addClass( 'is-visible' );
			}
			else {
				$( '.header-sticky' ).removeClass( 'is-visible' );
			}
		});
	}

	//== SCROLL TO TOP
	if ($('.js-to-top').length) {

		$( window).scroll(function(){
			var scrollTop = $(window).scrollTop();
			var heroOffsetTop = 400;

			if( $('.hero').length) {
				heroOffsetTop = $( '.hero' ).offset().top + $( '.hero' ).outerHeight();
			}

			if ( scrollTop > heroOffsetTop ) {
				$( '.js-to-top' ).fadeIn();
			}
			else {
				$( '.js-to-top' ).fadeOut();
			}

			if($(window).scrollTop() + $(window).height() > $(document).height() - $( '.footer__extra' ).height() ) {
		       $( '.js-to-top' ).addClass( 'is-bottom' );
   			}
			else {
				$( '.js-to-top' ).removeClass( 'is-bottom' );
			}
		});

		$( '.js-to-top' ).click(function() {
			$( 'html, body' ).animate( { scrollTop: 0 }, 'fast' );
		});
	}

	//== PANEL: SUB PAGE HERO IMAGE

	var $pageTitle = $( '.page-title' );
	var $pageTitleImage = $( '.page-title__image .panel__body img' );

	if ( $pageTitleImage ) {
		$pageTitle.css('background-image', 'url("' + $pageTitleImage.attr( 'src' ) + '")');
	}



	//== PANEL: HERO SLIDER

	var $heroSlider = $('.hero .w-icatcher-slider');
	if ( $heroSlider.length ) {
		var $heroSliderImages = $heroSlider.find('.w-icatcher-slider__list__item__image');
		$heroSliderImages.each(function(){
			var $imageElement = $(this);
			var $image = $imageElement.find('img');

			if ( $image.length ) {
				$imageElement.css('background-image', 'url("' + $image.attr('src') + '")');
			}
		});
	}


	//== ANIMATIONS TEST
	/*
	var onScreen = new OnScreen();

	// Content: Sections
	onScreen.on('enter', '.section', function (element) {
        $(element).addClass('has-entered-viewport');
    });
	*/


	//== SECTION: IMAGE
	$( '.section--image' ).each( function(){
		var $section = $( this );
		var $sectionImage = $section.find( '.section__image' );
		var $sectionImageElement = $sectionImage.find( 'img' );

		if ( $sectionImageElement ) {
			$sectionImage.css('background-image', 'url("' + $sectionImageElement.attr( 'src' ) + '")');
		}
	} );


	//== SECTION: TABS
	if ( $( '.section--tabs' ).length ) {
		$script('/themes/_base-snippets/1-1-0/includes/javascripts/dist/components/pages/sections/tabs.js', function () {
			componentsPagesSectionsTabs.init( {target: '.section--tabs'} );
		});
	}



	//== BUTTONS

	$( '.ck-button-one.is-aligned, .ck-button-two.is-aligned' ).each( function(){
		var $button = $( this );
		var $parentArticle = $button.parents( '.article' );

		if ( $parentArticle.hasClass( 'article--boxed--color-main' ) || $parentArticle.hasClass( 'article--boxed--color-accent' ) || $parentArticle.hasClass( 'article--boxed--color-muted' ) || $parentArticle.hasClass( 'article--boxed--color-dark' ) || $parentArticle.hasClass( 'article--default' ) ) {
			if ( $button.is( ':only-child' )) {
				if ($button.parent('strong').length) {
					$button = $button.parent();
				}
				$button.parent().remove();
			}
			$parentArticle.addClass( 'has-buttons-aligned' ).append( $button.wrap( '<div class="article__buttons" />' ).parent());
		}
	});



	//== TWITTER
	if ( $('#twitter-feed').length ) {

		var twfWidgetId = $('#twitter-feed').attr('data-widget-id');

		var config1 = {
			"profile": {"screenName": twfWidgetId},
			"domId": 'twitter-feed',
			"maxTweets": 1,
			"enableLinks": true,
			"showUser": true,
			"showTime": true,
			"showImages": true,
			"showInteraction": true,
			"lang": 'en'
		};

		twitterFetcher.fetch(config1);
	}


	//== INSTAGRAM
	if ( $( '.w-instagram' ).length ) {
		var instagramWidgetId = $( '.w-instagram' ).attr( 'data-widget-id' );
		var instagramWidgetNumber = $( '.w-instagram' ).attr( 'data-widget-number' );

		$script("/__themes/_base/1-2-0/includes/javascripts/src/global/plugins/jquery.igjs.js", function() {
			if ( instagramWidgetNumber > 10 ) {
				instagramWidgetNumber = 10;
			}

			$( ".w-instagram" ).igjs({
			  user: instagramWidgetId,
			  posts: instagramWidgetNumber
			});
		});
	}


//== PATTERN: RESPONSIVE DROPDOWN MENU

;(function ( $, window, document, undefined ) {

	// Create the defaults
    var pluginName = "showoffMenuDropDownResponsive",
        defaults = {
            moreItemText: '<i class="fa fa-ellipsis-h" aria-hidden="true"></i> <i class="fa fa-angle-down"></i>'
        };


    // The actual plugin constructor
    function Plugin( element, options ) {
        this.element = element;

        this.options = $.extend( {}, defaults, options) ;

        this._defaults = defaults;
        this._name = pluginName;

        this.init();
    }

    Plugin.prototype = {
        init: function() {
            this.createMoreMenuItem(this.element, this.options);
            this.calculateAvailableMenuSpace(this.element);
            this.initBinders(this.element);

			$(window).resize(function(){
				if ($(window).width() >= 1024) {
			  		this.calculateAvailableMenuSpace(this.element);
			  	}
			}.bind(this));
        },

        initBinders: function(menu) {
        	// On mouse enter
			$( menu ).on( 'mouseenter', '.menu__item', function(){
				$(this).addClass( 'hover' );
			});

			// On mouse leave
			$( menu ).on( 'mouseleave', '.menu__item', function(){
				$(this).removeClass( 'hover' );
			});
        },

        createMoreMenuItem: function(menu, options){
			var html = '<li class="menu__item menu__item--more"><span class="menu__item__text">'+ options.moreItemText + '</span><ul class="menu--sub-menu menu--sub-menu--level-1"></ul></li>';
			$(html).appendTo(menu);
        },

        calculateAvailableMenuSpace: function(menu) {
        	// Calculate the current menu items width
        	var menuWidth = 0;

			$(menu).children().not('.menu__item--more').each(function(){
				menuWidth += Math.ceil($(this).outerWidth(true));
			});

			// Calculate the 'more' menu item width
			var moreMenuWidth = $(menu).find('.menu__item--more').outerWidth(true);

			// Calculate the navigation available space by getting the total menu item width minus the more menu item width
			var navigationAvailableSpace = $(menu).parent().outerWidth(true) - moreMenuWidth;

			// Decides on the space whether menu items need to be moved to the 'more' item or out of it
			if ( menuWidth > navigationAvailableSpace ) {
				// Grabs the last menu item
				var $lastMenuItem = $(menu).children('.menu__item').not('.menu__item--more').last();

				// Sets the width so that we know the width it takes when on the main menu items
				$lastMenuItem.attr('data-width', $lastMenuItem.outerWidth(true));

				// Sends the last menu item to be inserted in the 'more' menu item sub menu
				this.addToMoreMenuItem(menu, $lastMenuItem);
			}
			else {
				this.removeFromMoreMenuItem(menu, menuWidth, navigationAvailableSpace);
			}
        },

        addToMoreMenuItem: function(menu, $menuItem) {
        	// Before prepending it, we need to increment the level of the sub menus so that they get
        	// the correct styling applied
        	$menuItem.find('.menu--sub-menu').each(function(){
        		var $subMenu = $(this);
        		var subMenuClass = $subMenu.attr('class');
        		var levelIndex = subMenuClass.indexOf("--level-");

        		var incrementedSubMenuClass = subMenuClass.replace(/\d+$/, function(n){ return ++n });

        		$subMenu.attr('class', incrementedSubMenuClass);
        	});

        	// Prepend the menu item to the 'more menu items'
        	var $moreMenuItems = $(menu).find('.menu__item--more').children('.menu--sub-menu');
        	$menuItem.prependTo($moreMenuItems);

        	this.setMoreMenuItemVisibility(menu);
        	this.calculateAvailableMenuSpace(menu);
        },

        removeFromMoreMenuItem: function(menu, menuWidth, navigationAvailableSpace) {
        	// Grabs the first menu item from the 'more' menu items and puts it back on the main menu items list
			var $moreMenuItem = $(menu).find('.menu__item--more');
			var $firstMoreMenuItem = $moreMenuItem.children('.menu--sub-menu').children('.menu__item').first();
			var firstMoreMenuItemWidth = $firstMoreMenuItem.data('width');

			// Grabs the first menu item from the 'more' menu items checks for its original width,
			// and if there is enough space, puts it back on the main menu items list
			if( (menuWidth + firstMoreMenuItemWidth) < navigationAvailableSpace ) {
	        	// Before putting it back, we need to decrement the level of the sub menus so that they get
	        	// the correct styling applied
	        	$firstMoreMenuItem.find('.menu--sub-menu').each(function(){
	        		var $subMenu = $(this);
	        		var subMenuClass = $subMenu.attr('class');
	        		var levelIndex = subMenuClass.indexOf("--level-");

	        		var incrementedSubMenuClass = subMenuClass.replace(/\d+$/, function(n){ return --n });

	        		$subMenu.attr('class', incrementedSubMenuClass);
	        	});

				$firstMoreMenuItem.removeAttr('data-width');
				$firstMoreMenuItem.insertBefore($moreMenuItem);

				this.calculateAvailableMenuSpace(menu);
			}

			this.setMoreMenuItemVisibility(menu);
        },

        setMoreMenuItemVisibility: function(menu) {
        	var $moreMenuItem = $(menu).find('.menu__item--more');

			if ( $moreMenuItem.children('.menu--sub-menu').children().length ) {
				$moreMenuItem.show();
			} else {
				$moreMenuItem.hide();
			}
        }
    };


    // A really lightweight plugin wrapper around the constructor,
    // preventing against multiple instantiations
    $.fn[pluginName] = function ( options ) {
        return this.each(function () {
            if (!$.data(this, "plugin_" + pluginName)) {
                $.data(this, "plugin_" + pluginName,
                new Plugin( this, options ));
            }
        });
    };

})( jQuery, window, document );


$('.header .menu--dropdown-responsive, .header-sticky .menu--dropdown-responsive, .navigation .menu--dropdown-responsive').showoffMenuDropDownResponsive();




//== PATTERN: RESPONSIVE MEGA MENU

;(function ( $, window, document, undefined ) {

	// Create the defaults
    var pluginName = "showoffMenuMegaResponsive",
        defaults = {
            moreItemText: '<i class="fa fa-ellipsis-h" aria-hidden="true"></i> <i class="fa fa-angle-down"></i>'
        };


    // The actual plugin constructor
    function Plugin( element, options ) {
        this.element = element;

        this.options = $.extend( {}, defaults, options) ;

        this._defaults = defaults;
        this._name = pluginName;

        this.init();
    }

    Plugin.prototype = {
        init: function() {
            this.createMoreMenuItem(this.element, this.options);
            this.calculateAvailableMenuSpace(this.element);
            this.initBinders(this.element);

			$(window).resize(function(){
				if ($(window).width() >= 1024) {
			  		this.calculateAvailableMenuSpace(this.element);
			  	}
			}.bind(this));
        },

        initBinders: function(menu) {
        	// On mouse enter
			$( menu ).on( 'mouseenter', '.menu__item', function(){
				$(this).addClass( 'hover' );
			});

			// On mouse leave
			$( menu ).on( 'mouseleave', '.menu__item', function(){
				$(this).removeClass( 'hover' );
			});
        },

        createMoreMenuItem: function(menu, options){
			var html = '<li class="menu__item menu__item--more"><span class="menu__item__text">'+ options.moreItemText + '</span><ul class="menu--sub-menu menu--sub-menu--level-1"></ul></li>';
			$(html).appendTo(menu);
        },

        calculateAvailableMenuSpace: function(menu) {
        	// Calculate the current menu items width
        	var menuWidth = 0;

			$(menu).children().not('.menu__item--more').each(function(){
				menuWidth += Math.ceil($(this).outerWidth(true));
			});

			// Calculate the 'more' menu item width
			var moreMenuWidth = $(menu).find('.menu__item--more').outerWidth(true);

			// Calculate the navigation available space by getting the total menu item width minus the more menu item width
			var navigationAvailableSpace = $(menu).parent().outerWidth(true) - moreMenuWidth;

			// Decides on the space whether menu items need to be moved to the 'more' item or out of it
			if ( menuWidth > navigationAvailableSpace ) {
				// Grabs the last menu item
				var $lastMenuItem = $(menu).children('.menu__item').not('.menu__item--more').last();

				// Sets the width so that we know the width it takes when on the main menu items
				$lastMenuItem.attr('data-width', $lastMenuItem.outerWidth(true));

				// Sends the last menu item to be inserted in the 'more' menu item sub menu
				this.addToMoreMenuItem(menu, $lastMenuItem);
			}
			else {
				this.removeFromMoreMenuItem(menu, menuWidth, navigationAvailableSpace);
			}
        },

        addToMoreMenuItem: function(menu, $menuItem) {
        	// Before prepending it, we need to increment the level of the sub menus so that they get
        	// the correct styling applied
        	$menuItem.find('.menu--sub-menu').each(function(){
        		var $subMenu = $(this);
        		var subMenuClass = $subMenu.attr('class');
        		var levelIndex = subMenuClass.indexOf("--level-");

        		var incrementedSubMenuClass = subMenuClass.replace(/\d+$/, function(n){ return ++n });

        		$subMenu.attr('class', incrementedSubMenuClass);
        	});

        	// Prepend the menu item to the 'more menu items'
        	var $moreMenuItems = $(menu).find('.menu__item--more').children('.menu--sub-menu');
        	$menuItem.prependTo($moreMenuItems);

        	this.setMoreMenuItemVisibility(menu);
        	this.calculateAvailableMenuSpace(menu);
        },

        removeFromMoreMenuItem: function(menu, menuWidth, navigationAvailableSpace) {
        	// Grabs the first menu item from the 'more' menu items and puts it back on the main menu items list
			var $moreMenuItem = $(menu).find('.menu__item--more');
			var $firstMoreMenuItem = $moreMenuItem.children('.menu--sub-menu').children('.menu__item').first();
			var firstMoreMenuItemWidth = $firstMoreMenuItem.data('width');

			// Grabs the first menu item from the 'more' menu items checks for its original width,
			// and if there is enough space, puts it back on the main menu items list
			if( (menuWidth + firstMoreMenuItemWidth) < navigationAvailableSpace ) {
	        	// Before putting it back, we need to decrement the level of the sub menus so that they get
	        	// the correct styling applied
	        	$firstMoreMenuItem.find('.menu--sub-menu').each(function(){
	        		var $subMenu = $(this);
	        		var subMenuClass = $subMenu.attr('class');
	        		var levelIndex = subMenuClass.indexOf("--level-");

	        		var incrementedSubMenuClass = subMenuClass.replace(/\d+$/, function(n){ return --n });

	        		$subMenu.attr('class', incrementedSubMenuClass);
	        	});

				$firstMoreMenuItem.removeAttr('data-width');
				$firstMoreMenuItem.insertBefore($moreMenuItem);

				this.calculateAvailableMenuSpace(menu);
			}

			this.setMoreMenuItemVisibility(menu);
        },

        setMoreMenuItemVisibility: function(menu) {
        	var $moreMenuItem = $(menu).find('.menu__item--more');

			if ( $moreMenuItem.children('.menu--sub-menu').children().length ) {
				$moreMenuItem.show();
			} else {
				$moreMenuItem.hide();
			}
        }
    };


    // A really lightweight plugin wrapper around the constructor,
    // preventing against multiple instantiations
    $.fn[pluginName] = function ( options ) {
        return this.each(function () {
            if (!$.data(this, "plugin_" + pluginName)) {
                $.data(this, "plugin_" + pluginName,
                new Plugin( this, options ));
            }
        });
    };

})( jQuery, window, document );


	$('.menu--mega-responsive').showoffMenuMegaResponsive();

	// IFRAME EMBED
	// This will force the iframe to have the same height of the windown
	if($('.iframe-calculate-height').length) {
		$('.iframe-calculate-height').each(function(){
			var windowHeight = $(window).height();
			$(this).height(windowHeight);
		});
	}

	//== POPUP
	if ( $( '.l-popup' ).length ) {
		var $popup = $( '.l-popup' );

		if ( $popup.data( 'enabled' ) == "yes" ) {
			$script('/__themes/_template_expo_aperture_01/includes/javascripts/global/plugins/js.cookie.js', function(){

				// The whole cookie businness
				var delay = $popup.data( 'delay' );
				var expires = $popup.data( 'expires' );
				var timer = 0;

				if ( Cookies.get('popupTimer') ) {
					timer = Cookies.get('popupTimer');
				}

				if ( $popup.data( 'expires' ) == 0 ) {
					Cookies.remove('popupTimer');
					$popup.addClass( 'is-visible' );
					$( 'body' ).addClass( 'has-popup-visible' );
				}

				if ( !Cookies.get('popup') ) {
					if ( delay ) {
						setInterval( function(){
							if ( !Cookies.get('popup') ) {
								Cookies.set('popupTimer', timer, { path: '' });

								if ( timer >= delay ) {
									if ( expires > 0 ) {
										Cookies.set('popup', 'true', { expires: expires });
									}
									else {
										Cookies.set('popup', 'true');
									}

									Cookies.remove('popupTimer');

									$popup.addClass( 'is-visible' );
									$( 'body' ).addClass( 'has-popup-visible' );
								}

								timer++;
							}
						}, 1000 );
					}
					else {
						if ( expires > 0 ) {
							Cookies.set('popup', 'true', { expires: expires });
						}
						else {
							Cookies.set('popup', 'true');
						}

						$popup.addClass( 'is-visible' );
						$( 'body' ).addClass( 'has-popup-visible' );
					}
				}

				// The close button
				$( '.js-popup-close' ).click( function() {
					$popup.removeClass( 'is-visible' );
					$( 'body' ).removeClass( 'has-popup-visible' );
				});
			});
		}

	}


	// CUSTOM: ACCORDION CATEGORIES IN THE EZONE
   $('body').on('ajaxupdate', '.w-zone-dashboard__main', function(){
	   $('.p-list--nested-form-groups input[checked]').each(function(){
		   var $input = $(this);
		   $input.parents('.form__group__controls').css('display', 'block');
	   });
   });

   $("body").on("click", ".w-zone-dashboard__main .p-list--nested-form-groups .form__group label", function(e){
	   var $toggle = $(this).parent(".form__group").siblings(".form__group__controls");
	   if ( $toggle.length ) {
		   $toggle.slideToggle();
		   e.preventDefault();
	   }
   });

});
